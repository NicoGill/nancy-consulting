.service-cloud {
  font-weight: 700;
  text-align: center;
  border-right: 1px solid #f0f0f0;
}

.col:last-child {
  .service-cloud {
      border-right: 0;
    }
}

$color-1: #2c343b; //
$color-2: #d44457; //
$color-3: #ffffff; // White

// header height

$header-S: 50px;
$header-M: 70px;

// intro height

$intro-height-S: 360px;
$intro-height-M: 500px;
$intro-height-L: 680px;

// center vertically and/or horizontally an absolute positioned element

@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

// antialiasing mode font rendering

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}


// breakpoints

$S:     480px;
$M:     768px;
$L:     1170px;

// media queries

@mixin MQ($canvas) {
  @if $canvas == S {
   @media only screen and (min-width: $S) { @content; }
  }
  @else if $canvas == M {
   @media only screen and (min-width: $M) { @content; }
  }
  @else if $canvas == L {
   @media only screen and (min-width: $L) { @content; }
  }
}

/* --------------------------------

Slider

-------------------------------- */

.cd-hero {
	position: relative;
	@include font-smoothing;
}

.cd-hero-slider {
	position: relative;
	height: $intro-height-S;
	overflow: hidden;

	li {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		@include transform(translateX(100%));

		&.selected {
			/* this is the visible slide */
			position: relative;
			@include transform(translateX(0));
		}

		&.move-left {
			/* slide hidden on the left */
			@include transform(translateX(-100%));
		}

		&.is-moving,
		&.selected {
			/* the is-moving class is assigned to the slide which is moving outside the viewport */
			@include transition(transform .5s);
		}
	}

	@include MQ(M) {
		height: $intro-height-M;
	}

	@include MQ(L) {
		height: $intro-height-L;
	}
}

/* --------------------------------

Single slide style

-------------------------------- */

.cd-hero-slider {

	li:first-of-type {
    background-color: #8662ed;
	}

	li:nth-of-type(2) {
    background-color: #6284ed;
	}

	li:nth-of-type(3) {
    background-color: #ed8662;
	}

	li:nth-of-type(4) {
    background-color: #6284ed;
	}

	.cd-full-width,
	.cd-half-width {
		position: absolute;
		width: 100%;
		height: 100%;
		z-index: 1;
		left: 0;
		top: 0;
		padding: 40px 80px;

		/* Force Hardware Acceleration in WebKit */
		@include transform(translateZ(0));
	}

	.cd-img-container {
		/* hide image on mobile device */
		display: none;

		img {
			position: absolute;
			@include center;
		}
	}

	.cd-bg-video-wrapper {
		/* hide video on mobile device */
		display: none;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		overflow: hidden;

		video {
			/* you won't see this element in the html, but it will be injected using js */
			display: block;
			min-height: 100%;
			min-width: 100%;
			max-width: none;
			height: auto;
			width: auto;
			position: absolute;
			@include center;
		}
	}
}

/* --------------------------------

Single slide animation

-------------------------------- */

@include MQ(M) {
	.cd-hero-slider {

		.cd-half-width {
			opacity: 0;
			@include transform(translateX(40px));
		}

		.move-left .cd-half-width {
			@include transform(translateX(-40px));
		}

		.selected .cd-half-width {
			/* this is the visible slide */
			opacity: 1;
			@include transform(translateX(0));
		}

		.is-moving .cd-half-width {
			/* this is the slide moving outside the viewport
			wait for the end of the transition on the <li> parent before set opacity to 0 and translate to 40px/-40px */
			@include transition(opacity 0s .5s);
      @include transform(0s .5s);
		}

		li.selected.from-left .cd-half-width:nth-of-type(2),
		li.selected.from-right .cd-half-width:first-of-type {
			/* this is the selected slide - different animation if it's entering from left or right */
			@include transition(opacity .4s .2s);
      @include transform (.5s .2s);
		}

		li.selected.from-left .cd-half-width:first-of-type,
		li.selected.from-right .cd-half-width:nth-of-type(2) {
			/* this is the selected slide - different animation if it's entering from left or right */
			@include transition(opacity .4s .4s);
      @include transform (.5s .4s);
		}

		.cd-full-width h2,
		.cd-full-width p,
		.cd-full-width .cd-btn {
			opacity: 0;
			@include transform(translateX(100px));
		}

		.move-left .cd-full-width h2,
		.move-left .cd-full-width p,
		.move-left .cd-full-width .cd-btn {
			opacity: 0;
			@include transform(translateX(-100px));
		}

		.selected .cd-full-width h2,
		.selected .cd-full-width p,
		.selected .cd-full-width .cd-btn {
			/* this is the visible slide */
			opacity: 1;
			@include transform(translateX(0));
		}

		li.is-moving .cd-full-width h2,
		li.is-moving .cd-full-width p,
		li.is-moving .cd-full-width .cd-btn {
			/* this is the slide moving outside the viewport
			wait for the end of the transition on the li parent before set opacity to 0 and translate to 100px/-100px */
			@include transition(opacity 0s .5s);
      @include transform (0s .5s);
		}

		li.selected h2 {
			@include transition(opacity .4s .2s);
      @include transform (.5s .2s);
		}

		li.selected p {
			@include transition(opacity .4s .3s);
      @include transform (.5s .3s);
		}

		li.selected .cd-btn {
			@include transition(opacity .4s .4s);
      @include transform (.5s .4s);
		}
	}
}

/* --------------------------------

Javascript disabled

-------------------------------- */
.no-js .cd-hero-slider li {
	display: none;

	&.selected {
		display: block;
	}
}

.no-js .cd-slider-nav {
	display: none;
}
